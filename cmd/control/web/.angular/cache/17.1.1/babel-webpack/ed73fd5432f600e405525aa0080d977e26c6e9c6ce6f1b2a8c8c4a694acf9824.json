{"ast":null,"code":"//import { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA, MatLegacyDialog as MatDialog} from '@angular/material/legacy-dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorDialog } from '../error/error.dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/grid-list\";\nfunction PresetsDialog_mat_grid_tile_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 7)(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function PresetsDialog_mat_grid_tile_2_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const preset_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.setCurPreset(preset_r1));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const preset_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"id\", preset_r1 == null ? null : preset_r1.displayName);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(preset_r1 == null ? null : preset_r1.displayName);\n  }\n}\nexport let PresetsDialog = /*#__PURE__*/(() => {\n  class PresetsDialog {\n    constructor(http, dialog, ref, data) {\n      this.http = http;\n      this.dialog = dialog;\n      this.ref = ref;\n      this.data = data;\n      this.close = () => {\n        this.ref.close();\n      };\n      this.confirm = () => {\n        if (this.curPreset == undefined) {\n          return;\n        }\n        console.log(this.curPreset);\n        this.http.get(this.curPreset.savePreset).subscribe(resp => {\n          console.log(\"resp\", resp);\n          this.ref.close();\n        }, err => {\n          console.warn(\"err\", err);\n          this.dialog.open(ErrorDialog, {\n            data: {\n              msg: \"Unable to set preset\"\n            }\n          });\n        });\n      };\n      this.setCurPreset = preset => {\n        var selected = document.querySelectorAll(\".selected\");\n        for (let i = 0; i < selected.length; i++) {\n          selected[i].classList.remove(\"selected\");\n        }\n        document.getElementById(preset.displayName).classList.add(\"selected\");\n        this.curPreset = preset;\n        console.log(this.curPreset);\n      };\n      this.disabled = () => {\n        if (this.curPreset == undefined) {\n          return true;\n        }\n        return false;\n      };\n    }\n    static #_ = this.ɵfac = function PresetsDialog_Factory(t) {\n      return new (t || PresetsDialog)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MatDialog));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PresetsDialog,\n      selectors: [[\"app-presets\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"presets-container\"], [\"cols\", \"2\", \"rowHeight\", \"4:1.75\", 1, \"presets\"], [\"class\", \"preset\", 4, \"ngFor\", \"ngForOf\"], [1, \"confirm-cancel\"], [1, \"button-wrapper\"], [\"mat-flat-button\", \"\", 1, \"cancel\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"confirm\", 3, \"disabled\", \"click\"], [1, \"preset\"], [\"mat-flat-button\", \"\", 3, \"id\", \"click\"]],\n      template: function PresetsDialog_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-grid-list\", 1);\n          i0.ɵɵtemplate(2, PresetsDialog_mat_grid_tile_2_Template, 3, 2, \"mat-grid-tile\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function PresetsDialog_Template_button_click_5_listener() {\n            return ctx.close();\n          });\n          i0.ɵɵtext(6, \"Cancel\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function PresetsDialog_Template_button_click_8_listener() {\n            return ctx.confirm();\n          });\n          i0.ɵɵtext(9, \"Confirm\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.data == null ? null : ctx.data.presets);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.disabled());\n        }\n      },\n      dependencies: [i3.NgForOf, i4.MatButton, i5.MatGridList, i5.MatGridTile],\n      styles: [\".selected[_ngcontent-%COMP%]{background-color:#87cefa!important}.mat-flat-button[_ngcontent-%COMP%]     .mat-button-focus-overlay{display:none}@media only screen and (min-width: 1024px){.presets-container[_ngcontent-%COMP%]{height:auto;width:282px}.presets[_ngcontent-%COMP%]{width:100%;height:100%}.preset[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:70%;max-height:50px;width:80%;white-space:normal;line-height:1.2;background-color:#ddd;justify-content:center;text-align:center;font-size:1em}.confirm-cancel[_ngcontent-%COMP%]{width:282px;margin-top:30px;display:flex;justify-content:space-evenly;height:50px}.confirm-cancel[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]{width:140.5px;height:61px;display:flex;justify-content:space-evenly}.confirm-cancel[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:70%;max-height:50px;width:80%;white-space:normal;line-height:1.2;justify-content:center;text-align:center;font-size:1em}.confirm-cancel[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]{background-color:#be0000;color:#fff}}@media only screen and (max-width: 1023px){.presets-container[_ngcontent-%COMP%]{height:auto;width:100%;min-width:281px}.presets[_ngcontent-%COMP%]{width:100%;height:100%}.preset[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:42px;width:112px;white-space:normal;line-height:1.2;background-color:#ddd;justify-content:center;text-align:center;font-size:max 2vh,2vw}.confirm-cancel[_ngcontent-%COMP%]{width:100%;min-width:281px;margin-top:30px;display:flex;justify-content:space-evenly;height:50px}.confirm-cancel[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]{width:140.5px;height:61px;display:flex;justify-content:space-evenly}.confirm-cancel[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:70%;max-height:50px;width:80%;white-space:normal;line-height:1.2;justify-content:center;text-align:center;font-size:max 2vh,2vw}.confirm-cancel[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   .cancel[_ngcontent-%COMP%]{background-color:#be0000;color:#fff}}\"]\n    });\n  }\n  return PresetsDialog;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}